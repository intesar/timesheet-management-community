<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">
<beans>
    
    <!-- DAO Injection -->
    
    <bean id="UserDAO" class="com.abbh.authenticator.dao.impl.UserDAOImpl" />
    
    <!-- End Of DAO Injection -->
    
    <!-- BO Injection -->
    
    <bean id="UserBO" class="com.abbh.authenticator.bo.impl.UserBOImpl" >
        <property name="userDAO">
            <ref bean="UserDAO" />
        </property>
    </bean>
    
    <!-- End of BO Injection -->
    
    
    <bean id="filterChainProxy" class="net.sf.acegisecurity.util.FilterChainProxy">
        <property name="filterInvocationDefinitionSource">
            <value>
                CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
                PATTERN_TYPE_APACHE_ANT
                /**=httpSessionContextIntegrationFilter, authenticationProcessingFilter, anonymousProcessingFilter, securityEnforcementFilter
            </value>
        </property>
    </bean>
    
    
    <!-- The first item in the Chain: httpSessionContextIntegrationFilter -->
    <bean id="httpSessionContextIntegrationFilter" class="net.sf.acegisecurity.context.HttpSessionContextIntegrationFilter">
        <property name="context">
            <value>net.sf.acegisecurity.context.security.SecureContextImpl</value>
        </property>
    </bean>
    
    
    <!-- the second item in the chain: authenticationProcessingFilter -->
    <bean id="authenticationProcessingFilter" class="net.sf.acegisecurity.ui.webapp.AuthenticationProcessingFilter">
        <property name="authenticationManager"><ref bean="authenticationManager"/></property>
        <property name="authenticationFailureUrl"><value>/acegilogin.jsp?login_error=1</value></property>
        <property name="defaultTargetUrl"><value>/secured/</value></property>
        <property name="alwaysUseDefaultTargetUrl"><value>true</value></property>
        <property name="filterProcessesUrl"><value>/j_acegi_security_check</value></property>
    </bean>
    
    <bean id="authenticationManager" class="net.sf.acegisecurity.providers.ProviderManager">
        <property name="providers">
            <list>
                <ref bean="daoAuthenticationProvider"/>
                <ref local="anonymousAuthenticationProvider"/>
            </list>
        </property>
    </bean>
    
    <bean id="daoAuthenticationProvider" class="net.sf.acegisecurity.providers.dao.DaoAuthenticationProvider">
        <property name="authenticationDao">
            <ref local="jdbcDaoImpl" /> <!--"memoryAuthenticationDao"/>-->
        </property>
    </bean>
    
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName"><value>com.mysql.jdbc.Driver</value></property>
        <property name="url"><value>jdbc:mysql:///authenticator</value></property>
        <property name="username"><value>authenticator</value></property>
        <property name="password"><value>authenticator</value></property>
    </bean>
    
    <bean id="jdbcDaoImpl" class="net.sf.acegisecurity.providers.dao.jdbc.JdbcDaoImpl">
        <property name="dataSource"><ref bean="dataSource"/></property>
        <property name="usersByUsernameQuery">
            <value>SELECT username,password,enabled FROM users WHERE username = ?</value>
        </property>
        <property name="authoritiesByUsernameQuery">
            <value>SELECT ur.USERNAME, ur.ROLE FROM USER_ROLES ur, USER_COMMUNITY uc  WHERE ur.USERNAME = uc.USERNAME AND ur.IS_DELETED = 0 AND uc.ENABLED =  1 AND  ur.USERNAME =   ?</value>
        </property>
    </bean>
    
    <bean id="memoryAuthenticationDao" class="net.sf.acegisecurity.providers.dao.memory.InMemoryDaoImpl">
        <property name="userMap">
            <value>sapient=password,ROLE_ADMIN,ROLE_USER</value>
        </property>
    </bean>
    
    <bean id="anonymousAuthenticationProvider" class="net.sf.acegisecurity.providers.anonymous.AnonymousAuthenticationProvider">
        <property name="key"><value>foobar</value></property>
    </bean>
    
    
    <!-- the third item in the chain: anonymousProcessingFilter -->   
    <bean id="anonymousProcessingFilter" class="net.sf.acegisecurity.providers.anonymous.AnonymousProcessingFilter">
        <property name="key"><value>foobar</value></property>
        <property name="userAttribute"><value>anonymousUser,ROLE_ANONYMOUS</value></property>
    </bean>
    
    <!-- the fourth item in the chain: securityEnforcementFilter -->  
    <bean id="securityEnforcementFilter" class="net.sf.acegisecurity.intercept.web.SecurityEnforcementFilter">
        <property name="filterSecurityInterceptor"><ref local="filterInvocationInterceptor"/></property>
        <property name="authenticationEntryPoint"><ref local="authenticationProcessingFilterEntryPoint"/></property>
    </bean>
    
    
    <bean id="filterInvocationInterceptor" class="net.sf.acegisecurity.intercept.web.FilterSecurityInterceptor">
        <property name="authenticationManager"><ref bean="authenticationManager"/></property>
        <property name="accessDecisionManager"><ref local="httpRequestAccessDecisionManager"/></property>
        <property name="objectDefinitionSource">
            <value>
                CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
                PATTERN_TYPE_APACHE_ANT
                /acegilogin.jsp*=ROLE_ANONYMOUS,ROLE_USER_TIMESHEET,ROLE_ADMIN_TIMESHEET
                /secured*=ROLE_ADMIN_TIMESHEET
                /**=ROLE_USER_TIMESHEET
            </value>
        </property>
    </bean>
    
    <!-- authenticationManager defined above -->

    <bean id="httpRequestAccessDecisionManager" class="net.sf.acegisecurity.vote.AffirmativeBased">
        <property name="allowIfAllAbstainDecisions"><value>false</value></property>
        <property name="decisionVoters">
            <list>
                <ref bean="roleVoter"/>
            </list>
        </property>
    </bean>
    
    <bean id="roleVoter" class="net.sf.acegisecurity.vote.RoleVoter"/>
    
    <bean id="authenticationProcessingFilterEntryPoint" class="net.sf.acegisecurity.ui.webapp.AuthenticationProcessingFilterEntryPoint">
        <property name="loginFormUrl"><value>/acegilogin.jsp</value></property>
        <property name="forceHttps"><value>false</value></property>
    </bean>
    
    <!-- Done with the chain -->

    <!-- This bean automatically receives AuthenticationEvent messages from DaoAuthenticationProvider -->
    <bean id="loggerListener" class="net.sf.acegisecurity.providers.dao.event.LoggerListener"/>
    
    
</beans>